{"version":3,"sources":["helper/Job.js","component/EnmityListEntry/EnmityListEntry.js","component/EnmityList/EnmityList.js","component/NavigationHeader/NavigationHeader.js","App.js","index.js"],"names":["JobIdMapping","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","JobRoleMapping","toJobName","entry","isPet","Job","enmityFormat","Intl","NumberFormat","EnmityListEntry","role","toRoleName","job","className","style","width","HateRate","isMe","Name","format","Enmity","EnmityList","entries","map","key","ID","hpPercentFormat","undefined","maximumFractionDigits","minimumFractionDigits","NavigationHeader","target","hp","toNumber","CurrentHP","maxHp","MaxHP","hpPercent","defaultTo","Distance","EffectiveDistance","App","useState","setTarget","setEntries","isLocked","setLocked","useEffect","updateData","enmity","Target","Entries","updateOverlayState","event","detail","window","addEventListener","startOverlayEvents","removeOverlayListener","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ca50508.chunk.js","sourcesContent":["const JobIdMapping = {\r\n    0: 'UNKNOWN',\r\n    1: 'GLA',\r\n    2: 'PGL',\r\n    3: 'MRD',\r\n    4: 'LNC',\r\n    5: 'ARC',\r\n    6: 'CNJ',\r\n    7: 'THM',\r\n    8: 'CRP',\r\n    9: 'BSM',\r\n    10: 'ARM',\r\n    11: 'GSM',\r\n    12: 'LTW',\r\n    13: 'WVR',\r\n    14: 'ALC',\r\n    15: 'CUL',\r\n    16: 'MIN',\r\n    17: 'BTN',\r\n    18: 'FSH',\r\n    19: 'PLD',\r\n    20: 'MNK',\r\n    21: 'WAR',\r\n    22: 'DRG',\r\n    23: 'BRD',\r\n    24: 'WHM',\r\n    25: 'BLM',\r\n    26: 'ACN',\r\n    27: 'SMN',\r\n    28: 'SCH',\r\n    29: 'ROG',\r\n    30: 'NIN',\r\n    31: 'MCH',\r\n    32: 'DRK',\r\n    33: 'AST',\r\n    34: 'SAM',\r\n    35: 'RDM',\r\n    36: 'BLU',\r\n    37: 'GNB',\r\n    38: 'DNC',\r\n}\r\n\r\nconst JobRoleMapping = {\r\n    // Tanks\r\n    'PLD': 'tank',\r\n    'WAR': 'tank',\r\n    'DRK': 'tank',\r\n    'GNB': 'tank',\r\n    'GLD': 'tank',\r\n    'MRD': 'tank',\r\n    // Healers\r\n    'WHM': 'healer',\r\n    'SCH': 'healer',\r\n    'AST': 'healer',\r\n    'CNJ': 'healer',\r\n    // DPS\r\n    'MNK': 'dps',\r\n    'DRG': 'dps',\r\n    'BRD': 'dps',\r\n    'NIN': 'dps',\r\n    'SMN': 'dps',\r\n    'BLM': 'dps',\r\n    'MCH': 'dps',\r\n    'SAM': 'dps',\r\n    'RDM': 'dps',\r\n    'DNC': 'dps',\r\n    'BLU': 'dps',\r\n    'PGL': 'dps',\r\n    'LNC': 'dps',\r\n    'ARC': 'dps',\r\n    'THM': 'dps',\r\n    'ROG': 'dps',\r\n    // PET\r\n    'PET': 'pet',\r\n}\r\n\r\nexport const toJobName = entry => entry.isPet ? 'PET' : JobIdMapping[entry.Job] ?? 'UNKNOWN'\r\n\r\nexport const toRoleName = entry => JobRoleMapping[toJobName(entry)] ?? 'UNKNOWN'\r\n\r\n","import React from 'react'\r\nimport {toJobName, toRoleName} from '../../helper/Job'\r\nimport './EnmityListEntry.css'\r\n\r\nconst enmityFormat = new Intl.NumberFormat()\r\n\r\nconst EnmityListEntry = ({entry}) => {\r\n    const role = toRoleName(entry)\r\n    const job = toJobName(entry)\r\n\r\n    return (\r\n        <div className=\"entry\">\r\n            <div className={'bar job-' + job}/>\r\n            <div\r\n                className={'gauge role-' + role}\r\n                style={{width: `${entry?.HateRate ?? 0}%`}}\r\n            />\r\n            <div className=\"name\">\r\n                {entry?.isMe ? 'YOU' : entry?.Name}\r\n            </div>\r\n            <div className=\"enmity-value\">\r\n                {enmityFormat.format(entry?.Enmity || 0)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnmityListEntry\r\n","import React from 'react'\r\nimport EnmityListEntry from '../EnmityListEntry/EnmityListEntry'\r\nimport './EnmityList.css'\r\n\r\nconst EnmityList = ({entries}) => {\r\n    return (\r\n        <div className=\"enmity-list\">\r\n            {entries.map(entry => <EnmityListEntry key={entry.ID} entry={entry}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnmityList\r\n","import {defaultTo, toNumber} from 'lodash'\r\nimport React from 'react'\r\nimport './NavigationHeader.css'\r\n\r\nconst hpPercentFormat = new Intl.NumberFormat(undefined, {maximumFractionDigits: 2, minimumFractionDigits: 2})\r\n\r\nconst NavigationHeader = ({target}) => {\r\n    const hp = toNumber(target?.CurrentHP)\r\n    const maxHp = toNumber(target?.MaxHP)\r\n\r\n    const hpPercent = hpPercentFormat.format((((hp || 0) / (maxHp || 0)) || 0) * 100)\r\n\r\n    return (\r\n        <nav className=\"navHeader\">\r\n            <div className=\"description\">\r\n                <div className=\"name\">\r\n                    <i className=\"icon material-icons\">gps_fixed</i>\r\n                    {defaultTo(target?.Name, '--')}\r\n                </div>\r\n            </div>\r\n            <div className=\"details\">\r\n                <div className=\"hp\">\r\n                    {defaultTo(hp, '--')} / {defaultTo(maxHp, '--')} ( {defaultTo(hpPercent, '--')}% )\r\n                </div>\r\n                <div className=\"distance\">\r\n                    {defaultTo(target?.Distance, '-- ')}m\r\n                    ( {defaultTo(target?.EffectiveDistance, '-- ')}m )\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavigationHeader\r\n","import React, {useEffect, useState} from 'react'\r\nimport './App.css'\r\nimport EnmityList from './component/EnmityList/EnmityList'\r\nimport NavigationHeader from './component/NavigationHeader/NavigationHeader'\r\n\r\nconst App = () => {\r\n    const [target, setTarget] = useState({})\r\n    const [entries, setEntries] = useState([])\r\n    const [isLocked, setLocked] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            const updateData = (enmity) => {\r\n                setTarget(enmity?.Target ?? {})\r\n                setEntries(enmity?.Entries ?? [])\r\n            }\r\n\r\n            const updateOverlayState = (event) => {\r\n                setLocked(event?.detail?.isLocked ?? false)\r\n            }\r\n\r\n            window.addEventListener('EnmityTargetData', updateData)\r\n            window.addEventListener('onOverlayStateUpdate', updateOverlayState)\r\n            window.startOverlayEvents()\r\n\r\n            return () => {\r\n                window.removeOverlayListener('EnmityTargetData', updateData)\r\n                window.removeOverlayListener('onOverlayStateUpdate', updateOverlayState)\r\n            }\r\n        },\r\n        [],\r\n    )\r\n\r\n    return (\r\n        <div className={'app ' + (isLocked ? 'hide-resize' : '')}>\r\n            <NavigationHeader target={target}/>\r\n            <EnmityList entries={entries}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n"],"sourceRoot":""}